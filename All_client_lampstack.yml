---
- hosts: all
  remote_user: ansible
  become: yes
  vars:
    os: ansible_facts['os_family']
    port: 80
    mysql_root_password: "password"
    mysql_database: "my_database"
    mysql_user: "my_user"
    mysql_user_password: "password"
    
  tasks:

    - name: Installing Apache
      yum: 
        name: httpd
        state: installed
      when: ansible_os_family == "RedHat"

    - name: Install Apache2
      apt:
        name: apache2
        state: present 
      when: ansible_os_family == "Debian"

    - name: Enabling httpd service and start the service
      service: 
        name: httpd
        enabled: yes
        state: started
      when: ansible_os_family == "RedHat"



    - name: Create document root for domain configured in host variable
      file:
        path: "/var/www/html/{{ http_host }}"
        state: directory
        owner: www-data
        group: www-data
        mode: '0755'
      when: ansible_os_family == "Debian"
  
    - name: Copy your index file
      template:
        src: "/home/ansible/index-template.html"
        dest: "/var/www/html/{{ http_host }}/index.html"
      when: ansible_os_family == "Debian"

    - name: Set up virtuahHost
      template:
        src: "/home/ansible/apache-template.conf"
        dest: "/etc/apache2/sites-available/{{ http_conf }}"
        owner: www-data
        group: www-data
        mode: '0755'
      when: ansible_os_family == "Debian"
    
    - name: Set up virtuahHost for nginx
      template:
        src: "/home/ansible/nginx.conf"
        dest: "/etc/nginx/sites-available/{{ http_conf }}"
        owner: www-data
        group: www-data
        mode: '0755'
      notify: restart nginx
      when: ansible_os_family == "Debian"
 
    - name: Enable site
      template: 
        src: "/home/ansible/nginx.conf"
        dest: "/etc/nginx/sites-enabled/{{ http_conf }}"
        owner: www-data
        group: www-data
        mode: '0755'
        state: link
      notify: restart nginx
      when: ansible_os_family == "Debian"
 
    - name: "UFW firewall allow HTTP on port {{ http_port }}"
      ufw:
        rule: allow
        port: 8086
        proto: tcp
      when: ansible_os_family == "Debian"
    
    
    - name: Setup nginx conf
      template:
        src=nginx.conf
        dest=/etc/nginx/nginx.conf
      notify: restart nginx
      when: ansible_os_family == "Debian"
 
     
    - name: Download sources
      get_url:
        url: http://repo.mysql.com/mysql-community-release-el7-5.noarch.rpm
        dest: .
      when: ansible_os_family == "RedHat"

    - name: Install package
      yum:
        name: ./mysql-community-release-el7-5.noarch.rpm
        state: present
      when: ansible_os_family == "RedHat"


    - name: Install MySQL
      yum: 
        name: mysql-server 
        state: installed
      when: ansible_os_family == "RedHat"

    - name: Start the MYSQL service
      service:
        name: mysqld
        enabled: yes
        state: started
      when: ansible_os_family == "RedHat"


    - name: Install MySQL server
      apt:
        name: mysql-server
        state: present
      when: ansible_os_family == "Debian"

    - name: Start MySQL service
      service:
        name: mysql
        state: started
        enabled: yes
      notify: Restart MySQL service
      when: ansible_os_family == "Debian"



    - name: Installing PHP
      yum:
        name: 
          - php 
          - php-mysql 
        state: latest
      when: ansible_os_family == "RedHat"

    - name: Copying your php file in the /var/www/html
      copy:
        src: /home/index.php
        dest: /var/www/html/index.php
      when: ansible_os_family == "RedHat"

    - name: Install PHP
      apt:
        name: php
        state: present
      when: ansible_os_family == "Debian"

    - name: Install PHP extensions
      apt:
        name:
        - php-mysql
        - php-curl
        - php-gd
        state: present
      when: ansible_os_family == "Debian"

    - name: Configure PHP
      lineinfile:
        path: /etc/php/7.4/cli/php.ini
        line: "extension=php_mysql.so"
        state: present
      when: ansible_os_family == "Debian"

  handlers:
    - name: restart-apache
      service:
        name: apache2
        state: restarted
      
    - name: Restart MySQL service
      service:
        name: mysql
        state: restarted
            
    - name: restart nginx
      service:
        name: nginx
        state: restarted
